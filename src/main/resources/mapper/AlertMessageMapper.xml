<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.banmatrip.alert.dao.AlertMessageMapper" >
  <resultMap id="BaseResultMap" type="com.banmatrip.alert.domain.AlertMessage" >
    <id column="message_id" property="messageId" jdbcType="INTEGER" />
    <result column="message_type_id" property="messageTypeId" jdbcType="VARCHAR" />
    <result column="receive_id" property="receiveId" jdbcType="INTEGER" />
    <result column="message_source" property="messageSource" jdbcType="VARCHAR" />
    <result column="message_type" property="messageType" jdbcType="CHAR" />
    <result column="message_status" property="messageStatus" jdbcType="CHAR" />
    <result column="warn_time" property="warnTime" jdbcType="TIMESTAMP" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    message_id, message_type_id, receive_id, message_source, message_type, message_status, 
    warn_time, send_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from alert_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from alert_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.banmatrip.alert.domain.AlertMessage" >
    insert into alert_message (message_id, message_type_id, receive_id, 
      message_source, message_type, message_status, 
      warn_time, send_time, create_time, 
      update_time)
    values (#{messageId,jdbcType=INTEGER}, #{messageTypeId,jdbcType=VARCHAR}, #{receiveId,jdbcType=INTEGER}, 
      #{messageSource,jdbcType=VARCHAR}, #{messageType,jdbcType=CHAR}, #{messageStatus,jdbcType=CHAR}, 
      #{warnTime,jdbcType=TIMESTAMP}, #{sendTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.banmatrip.alert.domain.AlertMessage" >
    insert into alert_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="messageTypeId != null" >
        message_type_id,
      </if>
      <if test="receiveId != null" >
        receive_id,
      </if>
      <if test="messageSource != null" >
        message_source,
      </if>
      <if test="messageType != null" >
        message_type,
      </if>
      <if test="messageStatus != null" >
        message_status,
      </if>
      <if test="warnTime != null" >
        warn_time,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="messageTypeId != null" >
        #{messageTypeId,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null" >
        #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="messageSource != null" >
        #{messageSource,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null" >
        #{messageType,jdbcType=CHAR},
      </if>
      <if test="messageStatus != null" >
        #{messageStatus,jdbcType=CHAR},
      </if>
      <if test="warnTime != null" >
        #{warnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.banmatrip.alert.domain.AlertMessage" >
    update alert_message
    <set >
      <if test="messageTypeId != null" >
        message_type_id = #{messageTypeId,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null" >
        receive_id = #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="messageSource != null" >
        message_source = #{messageSource,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null" >
        message_type = #{messageType,jdbcType=CHAR},
      </if>
      <if test="messageStatus != null" >
        message_status = #{messageStatus,jdbcType=CHAR},
      </if>
      <if test="warnTime != null" >
        warn_time = #{warnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.banmatrip.alert.domain.AlertMessage" >
    update alert_message
    set message_type_id = #{messageTypeId,jdbcType=VARCHAR},
      receive_id = #{receiveId,jdbcType=INTEGER},
      message_source = #{messageSource,jdbcType=VARCHAR},
      message_type = #{messageType,jdbcType=CHAR},
      message_status = #{messageStatus,jdbcType=CHAR},
      warn_time = #{warnTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <!--批量更新预警消息为已读状态-->
  <update id="setMessageStatusReaded" parameterType="java.util.List">
    update alert_message
    set
      message_status = 2
    where
    message_status = 1
    AND
    message_id IN
    <foreach collection="readedMessageIdList" item="item" index="index" close=")" open="(" separator=",">
      #{item}
    </foreach>
  </update>
  <insert id="insertByList" useGeneratedKeys="true" keyProperty="messageId" parameterType="java.util.List">
    insert into alert_message (message_type_id, receive_id,
    message_source, message_type, message_status,
    warn_time)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.messageTypeId},#{item.receiveId},#{item.messageSource},#{item.messageType},#{item.messageStatus},#{item.warnTime})
    </foreach>
  </insert>
</mapper>