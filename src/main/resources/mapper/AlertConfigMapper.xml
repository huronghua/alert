<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.banmatrip.alert.dao.AlertConfigMapper" >
  <resultMap id="BaseResultMap" type="com.banmatrip.alert.domain.AlertConfig" >
    <id column="config_id" property="configId" jdbcType="INTEGER" />
    <result column="destination_id" property="destinationId" jdbcType="INTEGER" />
    <result column="config_name" property="configName" jdbcType="VARCHAR" />
    <result column="config_value" property="configValue" jdbcType="VARCHAR" />
    <result column="config_type" property="configType" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    config_id, destination_id, config_name, config_value, config_type, create_time, update_time, 
    create_id, update_id,`level`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from alert_config
    where config_id = #{configId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from alert_config
    where config_id = #{configId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.banmatrip.alert.domain.AlertConfig" >
    insert into alert_config (config_id, destination_id, config_name, 
      config_value, config_type, create_time, 
      update_time, create_id, update_id, `level`
      )
    values (#{configId,jdbcType=INTEGER}, #{destinationId,jdbcType=INTEGER}, #{configName,jdbcType=VARCHAR}, 
      #{configValue,jdbcType=VARCHAR}, #{configType,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER},#{level,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="configId" parameterType="com.banmatrip.alert.domain.AlertConfig" >
    insert into alert_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="configId != null" >
        config_id,
      </if>
      <if test="destinationId != null" >
        destination_id,
      </if>
      <if test="configName != null" >
        config_name,
      </if>
      <if test="configValue != null" >
        config_value,
      </if>
      <if test="configType != null" >
        config_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="level != null" >
        `level`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="configId != null" >
        #{configId,jdbcType=INTEGER},
      </if>
      <if test="destinationId != null" >
        #{destinationId,jdbcType=INTEGER},
      </if>
      <if test="configName != null" >
        #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null" >
        #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configType != null" >
        #{configType,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.banmatrip.alert.domain.AlertConfig" >
    update alert_config
    <set >
      <if test="destinationId != null" >
        destination_id = #{destinationId,jdbcType=INTEGER},
      </if>
      <if test="configName != null" >
        config_name = #{configName,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null" >
        config_value = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="configType != null" >
        config_type = #{configType,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        `level` = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where config_id = #{configId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.banmatrip.alert.domain.AlertConfig" >
    update alert_config
    set destination_id = #{destinationId,jdbcType=INTEGER},
      config_name = #{configName,jdbcType=VARCHAR},
      config_value = #{configValue,jdbcType=VARCHAR},
      config_type = #{configType,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER},
      `level` = #{level,jdbcType=INTEGER}
    where config_id = #{configId,jdbcType=INTEGER}
  </update>
  <delete id="deleteByDestinationId">
    delete from alert_config
    where destination_id = #{destinationId,jdbcType=INTEGER}
  </delete>
  <select id="selectNotifyConfigIdByDestinationId" resultType="java.lang.Integer">
    SELECT
	config_id
    FROM
	alert_config
    WHERE
	destination_id = #{destinationId}
    AND
    ((config_type = 1 AND `level` = 2)
    OR (config_type = 3 AND `level` = 1)
    OR (config_type = 1 AND `level` = 3)
    )
  </select>
  
  <select id="selectOverHighConfigIdLevel2" resultType="java.lang.Integer">
    SELECT config_id FROM
    alert_config
    WHERE
        destination_id = #{destinationId}
    AND config_type = 1
    AND `level` = 2
  </select>

  <select id="selectOverHighConfigIdLevel3" resultType="java.lang.Integer">
    SELECT config_id FROM
    alert_config
    WHERE
    destination_id = #{destinationId}
    AND config_type = 1
    AND `level` = 3
  </select>

  <select id="selectAbnormalConfigIdLevel1" resultType="java.lang.Integer">
    SELECT config_id FROM
    alert_config
    WHERE
        destination_id = #{destinationId}
    AND config_type = 3
    AND `level` = 1
  </select>

  <select id="getConfigInfoByDestinationId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
	alert_config
    WHERE
	destination_id = #{destinationId}
  </select>
  
  <select id="getDestinationIdList" resultType="java.lang.Integer">
    SELECT
        DISTINCT(destination_id)
    FROM
    alert_config
  </select>
  
  <select id="getDynamicCostAlertConfigInfoByDestinationId" resultType="com.banmatrip.alert.domain.AlertConfig">
    SELECT
    config_id AS 'configId',
    destination_id AS 'destinationId',
    config_name AS 'configName',
    config_value AS 'configValue',
    config_type AS 'configType'
    FROM `alert_config`
    WHERE
    config_type in (1,2)
    AND
    destination_id = #{destinationId}
  </select>

  <select id="getOrderCostAlertConfigInfoByDestinationId" resultType="com.banmatrip.alert.domain.AlertConfig">
    SELECT
    config_id AS 'configId',
    destination_id AS 'destinationId',
    config_name AS 'configName',
    config_value AS 'configValue',
    config_type AS 'configType'
    FROM `alert_config`
    WHERE
    config_type = 3
    AND
    destination_id = #{destinationId}
  </select>
  
  <select id="getAlertMessageCountByUserId" resultType="java.lang.Integer">
    SELECT
        COUNT(*)
    FROM
    (SELECT
    *
    FROM
    alert_message
    WHERE
    receive_id = #{userId}
    )a
    LEFT JOIN	`alert_message_detail` b ON a.message_id = b.message_id
    WHERE
        b.operating_status = 1
  </select>
</mapper>