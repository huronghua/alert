<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.banmatrip.alert.dao.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.banmatrip.alert.domain.Department" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="charge_id" property="chargeId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, parent_id, type, charge_id, create_time, update_time, create_id, update_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sso_department
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sso_department
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.banmatrip.alert.domain.Department" >
    insert into sso_department (id, name, parent_id, 
      type, charge_id, create_time, 
      update_time, create_id, update_id
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{type,jdbcType=CHAR}, #{chargeId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.banmatrip.alert.domain.Department" >
    insert into sso_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="chargeId != null" >
        charge_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="chargeId != null" >
        #{chargeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.banmatrip.alert.domain.Department" >
    update sso_department
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="chargeId != null" >
        charge_id = #{chargeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.banmatrip.alert.domain.Department" >
    update sso_department
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      type = #{type,jdbcType=CHAR},
      charge_id = #{chargeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultType="java.util.Map">
    select id,parent_id as pId,`name` from sso_department where delete_flag=0
  </select>

  <select id="findChild" resultMap="BaseResultMap">
    select * from sso_department where delete_flag=0 and parent_id=#{id}
  </select>

  <select id="findDepChild" parameterType="java.lang.Integer" resultType="java.util.Map" >
    select
    *
    from sso_department
    WHERE parent_id = #{id} AND delete_flag = 0
  </select>

  <update id="deleteById" parameterType="com.banmatrip.alert.domain.Department" >
    UPDATE
      sso_department
    SET
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=INTEGER}
    WHERE
      id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertByDepartment" parameterType="com.banmatrip.alert.domain.Department" keyProperty="id">
    <selectKey keyProperty="id" order="AFTER" resultType="int">
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
    insert into sso_department ( name, parent_id,
    type, charge_id, create_time,
    update_time, create_id, update_id)
    values (#{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER},
    #{type,jdbcType=CHAR}, #{chargeId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP},
    #{updateTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, #{updateId,jdbcType=INTEGER})
  </insert>
  <select id="selectByDepartmentName" parameterType="java.util.List" resultType="java.lang.Integer">
    SELECT
      `id`
    FROM
      sso_department
    WHERE
      `delete_flag` = 0 AND
      `name` IN
      <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
        #{item}
      </foreach>
  </select>

  <!--根据部门组编号查找部门信息-->
  <select id="selectDepartmentByGroupId" resultType="com.banmatrip.alert.domain.Department" parameterType="java.lang.Integer">
    SELECT
      a.id AS id,
      a.charge_id AS chargeId,
      a.create_id AS createId ,
      a.create_time AS createTime,
      a.`name` AS name
    FROM
        sso_department a
    JOIN sso_department_group b
      ON a.id = b.department_id
      AND a.delete_flag = 0
      AND b.delete_flag = 0
     WHERE
	   b.id = #{departmentGroupId}
  </select>

  <select id="selectDepTree" resultType="java.util.Map">
    select id,parent_id as pId,`name` from sso_department where delete_flag=0
  </select>
  <select id="selectParentIdById" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
    select
    parent_id
    from sso_department
    WHERE id = #{id} AND delete_flag = 0
  </select>
  <select id="countByEditDepartmentName" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(*)
    FROM sso_department
    WHERE `name` = #{departmentName} AND `id` != #{id} AND delete_flag = 0
  </select>
  <select id="countByAddDepartmentName" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT count(*)
    FROM sso_department
    WHERE `name` = #{departmentName} AND delete_flag = 0
  </select>

  <select id="getIdByName" resultType="java.lang.Integer">
    select id from sso_department WHERE `name` = #{name} AND delete_flag = 0
  </select>

<!--新部门树初始化方法-->
  <select id="selectMaxDepartmentType" resultType="java.lang.Integer">
    SELECT Max(type) from sso_department where delete_flag=0
  </select>
  <select id="selectDepartmentUsrCount" resultType="java.util.Map">
    SELECT
    a.id,
    a.`name`,
    a.type,
    a.parent_id AS 'pId',
    count(c.account) AS 'usrCount'
    FROM
    sso_department a
    LEFT JOIN sso_department_group b ON a.id = b.department_id and b.delete_flag = 0
    LEFT JOIN sso_user c ON b.id = c.department_id and c.disable_status = 0
    WHERE
    a.delete_flag = 0
    GROUP BY
    a.id
  </select>
</mapper>